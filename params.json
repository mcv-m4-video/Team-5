{"name":"Video surveillance for road traffic monitoring","tagline":"","body":"The foreground segmentation code, provides the possible F1 scores with\r\nthe given parameters alpha and phi. It uses adaptive learning. The F1 calculation \r\nis done by PerformanceEvaluationPixel.m and PerformanceEvaluationPixel.m. So they need to be\r\nin the same folder. The shadow detection code does not affect the result, because we could not increase\r\nthe F1 score. Precision-recall and AUC value are also calculated. \r\n\r\nThe optical flow estimation is based on the block matching. It gives good results. The affine transform\r\nmatrix can be extracted from the optical flow estimation. It is used for the stabilize the traffic sequence. \r\nThe block matching algorithm is more useful than Lucas-Kanade considering the stabilization, because its\r\nestimation is better. \r\n\r\nThe tracking is done by three methods: Deep Learning Tracker, Mean Shift Tracker and Kalman Filter. Kalman filter\r\nis the MATLAB's built-in function. Deep learning and mean shift codes are made available for multi-object tracking. \r\n\r\n\r\n### Authors and Contributors\r\nThis are the people who did that practices:\r\n\r\nAKHIL GURRAM (@akhil-robotvision)\r\nXialei Liu (@xialeiliu)\r\nVacit Oguz Yazici (@Vacoz)\r\n\r\nYou can find paper in this [link](https://www.sharelatex.com/project/56abc1dcef3d3b7849f3cc84/output/output.pdf?cache_bust=1454098039389&compileGroup=standard&build=1528eff4dbc) and [code](https://github.com/mcv-m4-video/Team-5).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}